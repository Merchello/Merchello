@inherits Merchello.Web.Mvc.MerchelloHelperViewPage<Merchello.Core.Models.MonitorModels.IShipmentResultNotifyModel>
@using Merchello.Core
@using Merchello.Core.Models
@using Merchello.FastTrack.Factories
@*
    MerchelloHelperViewPage<T> inherits from UmbracoViewPage<t> and exposes the MerchelloHelper as 'Merchello'
    Example usage:  var product = Merchello.TypedProductContent(YOURPRODUCTKEY);
    Note: This exposure of Merchello causes ambiguity with the Merchello.Core namespace hence use of global:: below.
*@
@{
    Layout = null; // Avoid using the Master.cshtml layout which inherits from UmbracoTemplatePage and hence RenderModel
    var destination = Model.Shipment.GetDestinationAddress();

}
<p>Dear @Model.Invoice.BillToName</p>
<p>We have just @(Model.Shipment.ShipmentStatus.Key == global::Merchello.Core.Constants.ShipmentStatus.Shipped ? "shipped" : "delivered") the following order:</p>
@Html.Partial("_Address", destination)
<table>
    <tr>
        <td>Invoice No:</td>
        <td colspan="2">@Model.Invoice.PrefixedInvoiceNumber()</td>
    </tr>
    <tr>
        <td>Order No:</td>
        <td colspan="2">@Model.Invoice.Orders.First().OrderNumber</td>
    </tr>
    <tr>
        <td>Shipment No:</td>
        <td colspan="2">@Model.Shipment.ShipmentNumber</td>
    </tr>
    <tr>
        <td>Tracking No:</td>
        <td colspan="2">@Model.Shipment.TrackingCode</td>
    </tr>
    <tr>
        <td colspan="3">Items</td>
    </tr>
    <tr>
        <td>Name</td>
        <td>SKU</td>
        <td>Quantity</td>
    </tr>
    @foreach (var item in Model.Shipment.Items)
    {
        <tr>
            <td>@item.Name</td>
            <td>@item.Sku</td>
            <td>@item.Quantity</td>
        </tr>
    }
</table>