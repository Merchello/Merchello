@inherits Umbraco.Web.Mvc.UmbracoViewPage<Merchello.Web.Store.Models.StoreItemCacheModel>

@using System.Web.Mvc.Html
@using Merchello.Core
@using Merchello.FastTrack.Ui
@using Merchello.Web.Models.Ui
@using Merchello.Web.Store.Controllers
@using Umbraco.Core.Models
@using Umbraco.Web


@{
    var currentPage = Umbraco.TypedContent(UmbracoContext.Current.PageId);

    using (Html.BeginUmbracoForm<WishListController>("UpdateWishList", new { area = "FastTrack" }, new { data_muifrm = "wishlist" }))
    {

        @Html.AntiForgeryToken()
        <table class="table mui-basket mui-default">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @for (var i = 0; i < Model.Items.Count(); i++)
                {
                    var product = Model.Items[i].Product;
                    if (product != null)
                    {
                        <tr>
                            <td class="image">
                                @Html.HiddenFor(model => Model.Items[i].Key)


                                @{
                                    // This is a property reference to a content type on the default starter kit
                                    // and may need to change for site specific implementations.  Example!
                                    if (product.HasValue("image"))
                                    {
                                        var mediaId = product.GetPropertyValue<string>("image");
                                        var image = Umbraco.TypedMedia(mediaId);

                                        <a href="@product.Url"><img src="@image.GetCropUrl(width: 20)" alt="@product.Name" width="20" /></a>
                                    }
                                    <a href="@product.Url">
                                        <span>@product.Name</span>
                                        @foreach (var choice in Model.Items[i].CustomerOptionChoices)
                                        {
                                            <span class="option-choice">@choice.Key - @choice.Value</span>
                                        }
                                    </a>
                                }

                            </td>
                            <td>@Model.Items[i].Amount.AsFormattedCurrency()</td>
                            <td>@Html.TextBoxFor(model => Model.Items[i].Quantity, new { @type = "number", min = "1", data_muiaction = "updatequantity" })</td>
                            <td data-muivalue="linetotal">@Model.Items[i].Total().AsFormattedCurrency()</td>
                            <td class="text-right">
    
                                @Html.ActionLink("Basket +", "MoveItemToBasket", "WishList", new { area = "Merchello", lineItemKey = Model.Items[i].Key, successRedirectId = currentPage.Id }, new { @class = "btn btn-info" })


                                @Html.ActionLink("Remove", "RemoveWishlistItem", "WishList", new { area = "Merchello", lineItemKey = Model.Items[i].Key, redirectId = currentPage.Id }, new { @class = "btn btn-danger" })
                            </td>
                        </tr>

                                        }
                                    }
                <tr>
                    <td colspan="3" class="text-right"><strong>Sub Total</strong></td>
                    <td colspan="2" data-muivalue="total"><strong>@Model.Total().AsFormattedCurrency()</strong></td>
                </tr>
                <tr class="hide">
                    <td colspan="3">&nbsp;</td>
                    <td colspan="2"><input type="submit" id="update-wishlist" class="btn btn-default" name="update" value="Update" data-muibtn="update"  /></td>
                </tr>
            </tbody>
        </table>

    }
}