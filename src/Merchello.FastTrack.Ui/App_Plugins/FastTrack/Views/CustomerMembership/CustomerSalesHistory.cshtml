@model Merchello.Web.Models.Ui.Rendering.ICustomerSalesHistory
@using System.Web.Mvc.Html
@using Merchello.Core
@using Merchello.FastTrack.Ui
@using Merchello.Web.Models.ContentEditing

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Sales History</h4>
    </div>
    <div class="panel-body">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Invoice</th>
                <th>Date</th>
                <th>Invoice Status</th>
                <th>Order Status</th>
                <th>Total</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.OrderByDescending(x => x.InvoiceDate))
            {
                <tr>
                    <td>@Html.ActionLink(item.PrefixedInvoiceNumber(), "ViewReceipt", "CustomerMembership", new { key = item.Key, redirectId = ExampleUiHelper.Content.GetReceipt().Id }, null)</td>
                    <td>@item.InvoiceDate.ToString("dd-MM-yyyy")</td>
                    <td>@item.InvoiceStatus.Name</td>
                    <td>@GetOrderStatus(item)</td>
                    <td class="text-right">@item.Total.AsFormattedCurrency()</td>
                </tr>
            }
            </tbody>
            <tfoot>
            <tr>
                <td colspan="4" class="text-right">
                    Total Purchases:
                </td>
                <td class="text-right"><strong>@Model.TotalPurchases.AsFormattedCurrency()</strong></td>
            </tr>
            @if (Model.TotalOutstanding > 0)
            {
            <tr>
                <td colspan="4" class="text-right">
                    Total Paid:
                </td>
                <td class="text-right">@Model.TotalPaid.AsFormattedCurrency()</td>
            </tr>

                    <tr>
                        <td colspan="4" class="text-right">
                            Outstanding Balance:
                        </td>
                        <td class="text-right"><strong>@Model.TotalOutstanding.AsFormattedCurrency()</strong></td>
                    </tr>
                }

            </tfoot>
        </table>
    </div>
</div>

@functions {

    private string GetOrderStatus(InvoiceDisplay invoice)
    {
        // An invoice that has been paid through a provider and has not been viewed yet may not have an order at this point.
        if (!invoice.Orders.Any() && invoice.InvoiceStatusKey == Merchello.Core.Constants.InvoiceStatus.Paid) return "Waiting";
        var order = invoice.Orders.FirstOrDefault();
        if (order != null) return order.OrderStatus.Name;
        // This should not happen but is here for a final catch
        return "Please Inquire";
    }

}

