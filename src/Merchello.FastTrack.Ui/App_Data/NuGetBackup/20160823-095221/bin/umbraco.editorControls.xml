<?xml version="1.0"?>
<doc>
    <assembly>
        <name>umbraco.editorControls</name>
    </assembly>
    <members>
        <member name="T:umbraco.editorControls.AbstractJsonPrevalueEditor">
            <summary>
            Abstract class for the PreValue Editor.
            Specifically designed to serialize/deserialize the options as JSON.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.AbstractPrevalueEditor">
            <summary>
            Abstract class for the PreValue Editor.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractPrevalueEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.AbstractPrevalueEditor"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractPrevalueEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.AbstractPrevalueEditor.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:umbraco.editorControls.AbstractPrevalueEditor.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="P:umbraco.editorControls.AbstractPrevalueEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="F:umbraco.editorControls.AbstractJsonPrevalueEditor.m_DataType">
            <summary>
            The underlying base data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.AbstractJsonPrevalueEditor.m_Locker">
            <summary>
            An object to temporarily lock writing to the database.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractJsonPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.AbstractJsonPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.AbstractJsonPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,umbraco.cms.businesslogic.datatype.DBTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.AbstractJsonPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="dbType">Type of the database field.</param>
        </member>
        <member name="M:umbraco.editorControls.AbstractJsonPrevalueEditor.GetPreValueOptions``1">
            <summary>
            Gets the PreValue options for the data-type.
            </summary>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <returns>
            Returns the options for the PreValue Editor
            </returns>
        </member>
        <member name="M:umbraco.editorControls.AbstractJsonPrevalueEditor.SaveAsJson(System.Object)">
            <summary>
            Saves the data-type PreValue options.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.AbstractOptions">
            <summary>
            Abstract class for the Prevalue Editor options.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.AbstractOptions"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.AbstractOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.AbstractOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [load defaults].</param>
        </member>
        <member name="T:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.data">
            <summary>
            value stored by a datatype instance
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.options">
            <summary>
            configuration options for this datatype, as defined by the PreValueEditor
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.statusLiteral">
            <summary>
            Literal used to render status (Enabled || Disabled)
            this datatype is only enabled and active if it can find the property alias on the current node (as defined in PreValueEditor) and 
            the relation type parent object type (or child if reverse index used) matches the object type of the current node which this datatype is on
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.#ctor(umbraco.interfaces.IData,umbraco.editorControls.PickerRelations.PickerRelationsOptions)">
            <summary>
            Initializes a new instance of PickerRelationsDataEditor
            </summary>
            <param name="data">data stored by this instance of this datatype (not currently used)</param>
            <param name="options">configuration options for this datatype as set by the PreValueEditor</param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.CreateChildControls">
            <summary>
            Creates the child controls
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node, this datatype doens't do anythign here, but with an event handler instead,
            as needs to know the saved values of a sibling pickerProperty
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.GetMappingDetails">
            <summary>
            returns a string "Property '[propertyAlias]' with RelationType '[relationTypeName]"
            </summary>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.GetPickerUmbracoObjectType(umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            returns the UmbracoObjectType associated as defined by the supplied relation type, and if reverse indexing has been enabled
            </summary>
            <param name="relationType">associated RealationType</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.IsContextUmbracoObjectTypeValid(umbraco.uQuery.UmbracoObjectType,umbraco.cms.businesslogic.relation.RelationType)">
            <summary>
            Check to see if the content id side of the relation type is valid (doesn't check the node picker id side)
            </summary>
            <param name="contextUmbracoObjectType">Type of the content object (content/ media or member)</param>
            <param name="relationType">Type of the relation.</param>
            <returns>
            	<c>true</c> if [is content object type valid] [the specified content object type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether this is an RTE - this Property expected by Umbraco
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether the label should be shown when editing - this Property exected by Umbraco
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.Editor">
            <summary>
            Gets the DataEditor - Property expected by Umbraco
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.CurrentContentId">
            <summary>
            Gets the id of the current (content || media || member) node on which this datatype is a property
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataEditor.CurrentContextObjectType">
            <summary>
            Gets the UmbracoObjectType on which this datatype is a property of
            </summary>
        </member>
        <member name="T:umbraco.editorControls.PickerRelations.PickerRelationsDataType">
            <summary>
            This datatype will render a CheckBoxList where the options are defined by an XPath expression,
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataType.preValueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataType.dataEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsDataType.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance,
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler">
            <summary>
            Event handler that will convert a CSV into Relations
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler.#ctor">
            <summary>
            Initializes a new instance of PickerRelationsEventHandler,
            hooks into the after event of saving a Content node, Media item or a Member
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler.AfterSave(umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.SaveEventArgs)">
            <summary>
            Event after all properties have been saved
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler.BeforeDelete(umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.DeleteEventArgs)">
            <summary>
            Clears any existing relations when deleting a node with a PickerRelations datatype
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:umbraco.cms.businesslogic.DeleteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler.DeleteRelations(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Boolean,System.String)">
            <summary>
            Delete all relations using the content node for a given RelationType
            </summary>
            <param name="relationType"></param>
            <param name="contentNodeId"></param>
            <param name="reverseIndexing"></param>
            <param name="instanceIdentifier">NOT USED ATM</param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsEventHandler.CreateRelation(umbraco.cms.businesslogic.relation.RelationType,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="relationType"></param>
            <param name="contentNodeId">id sourced from the Content / Media / Member</param>
            <param name="pickerNodeId">id sourced from the Picker</param>
            <param name="reverseIndexing">if true, reverses the parentId and child Id</param>
            <param name="instanceIdentifier">JSON string with id of Picker Relations property instance</param>
        </member>
        <member name="T:umbraco.editorControls.PickerRelations.PickerRelationsOptions">
            <summary>
            Data Class, used to store the configuration options for the PickerRelationsPreValueEditor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsOptions.#ctor">
            <summary>
            Initializes an instance of PickerRelationsOptions
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsOptions.PropertyAlias">
            <summary>
            Alias of the pickerProperty to get a csv value of IDs from //TODO: a known format for xml fragments would be good too
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsOptions.RelationTypeId">
            <summary>
            The Id of the RelationType to use 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsOptions.ReverseIndexing">
            <summary>
            only relevant with parent-child 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsOptions.HideDataEditor">
            <summary>
            if true then the property is hidden
            </summary>
        </member>
        <member name="T:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor">
            <summary>
            This PreValueEditor will require an XPath expression to define the nodes to pick as CheckBox options,
            TODO: [HR] min / max selections ?
            Uses the shared JsonPreValueEditor as nice way of lightweight serializing a config data class object into a single DB field
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.pickerPropertyAliasPicker">
            <summary>
            Prepopulated Umbraco Propery Picker, lists all aliases (could refine this by asking for the context in which this relation wire-up will
            be used, and then only listing the aliases for that context)
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.pickerPropertyAliasRequiredFieldValidator">
            <summary>
            RequiredFieldValidator for the ProperyAliasPicker
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.relationTypeDropDownList">
            <summary>
            drop down list of all relation types
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.relationTypeRequiredFieldValidator">
            <summary>
            RequiredFieldValidator for the RelationType DropDownList
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.reverseIndexingCheckBox">
            <summary>
            If a parent to child relation type is selected, then this checkbox will indicate the direction to use,
            with reverse indexing the parents are the nodes selected via the picker, and the nodeID on which the
            this datatype is used, become the child nodes
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.hideDataEditorCheckBox">
            <summary>
            if selected, then the property on the data editor is hidden (it's only used as a label)
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="F:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.relationType">
            <summary>
            Currently selected RelationType
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of PickerRelationsPreValueEditor
            </summary>
            <param name="dataType">PickerRelationsDataType</param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.OnPreRender(System.EventArgs)">
            <summary>
            Used to remove styling from the built in pickerProperty alias picker DropDownList 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.Options">
            <summary>
            Lazy load the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="P:umbraco.editorControls.PickerRelations.PickerRelationsPreValueEditor.RelationType">
            <summary>
            Lazy load currently selected RelationType
            </summary>
        </member>
        <member name="T:umbraco.editorControls.BaseTreePickerEditor">
            <summary>
            A base tree picker class that has all of the functionality built in for an IDataEditor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.colorPicker">
            <summary>
            Summary description for colorPicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.colorpicker.ColorPickerDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.CsvToXmlData">
            <summary>
            Overrides the <see cref="T:umbraco.cms.businesslogic.datatype.DefaultData"/> object to return the value as XML.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.CsvToXmlData.separator">
            <summary>
            The separators to split the delimited string.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.CsvToXmlData.rootName">
            <summary>
            Name for the root node.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.CsvToXmlData.elementName">
            <summary>
            Name for the element/node that contains the value.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.CsvToXmlData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.CsvToXmlData"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.CsvToXmlData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.CsvToXmlData"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="rootName">Name of the root.</param>
        </member>
        <member name="M:umbraco.editorControls.CsvToXmlData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.CsvToXmlData"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="rootName">Name of the root.</param>
            <param name="elementName">Name of the element.</param>
        </member>
        <member name="M:umbraco.editorControls.CsvToXmlData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.CsvToXmlData"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="rootName">Name of the root.</param>
            <param name="elementName">Name of the element.</param>
            <param name="separator">The separator.</param>
        </member>
        <member name="M:umbraco.editorControls.CsvToXmlData.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Converts the data value to XML.
            </summary>
            <param name="data">The data to convert to XML.</param>
            <returns>Returns the data value as an XmlNode</returns>
        </member>
        <member name="T:umbraco.editorControls.DataTypeGuids">
            <summary>
            Defines the Guids for all the DataTypes; e.g. quick access to 3rd-party developers.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.MultiNodeTreePickerId">
            <summary>
            Guid for the MultiNodeTreePicker data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.MultipleTextstringId">
            <summary>
            Guid for the MultipleTextstring data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.PickerRelationsId">
            <summary>
            Guid for the PickerRelations (previoulsy uComponents: MultiPickerRelations)
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.SliderId">
            <summary>
            Guid for the Slider data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.XPathCheckBoxListId">
            <summary>
            Guid for the XPathCheckBoxList data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.DataTypeGuids.XPathDropDownListId">
            <summary>
            Guid for the XPathDropDownList data-type.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datefieldmultiple.DataTypeDatefieldMultiple">
            <summary>
            Summary description for DataTypeDatefieldMultiple.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datepicker.DateDataType">
            <summary>
            Summary description for DateDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datepicker.DateData">
            <summary>
            Summary description for DateData.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dateField">
            <summary>
            Summary description for dateField.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.DefaultDataKeyValue">
            <summary>
            Summary description for cms.businesslogic.datatype.DefaultDataKeyValue.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.DefaultDataKeyValue.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Gets the values of from cmsDataTypePreValues table by id and puts them into a CDATA section
            </summary>
            <param name="xmlDocument"></param>
            <returns></returns>		
        </member>
        <member name="M:umbraco.editorControls.DefaultPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,System.Boolean)">
            <summary>
            The default editor for editing the built-in pre values in umbraco
            </summary>
            <param name="DataType">The DataType to be parsed</param>
            <param name="DisplayTextBox">Whether to use the default text box</param>
        </member>
        <member name="M:umbraco.editorControls.DefaultPrevalueEditor.#ctor(umbraco.editorControls.BaseDataType,System.Boolean)">
            <summary>
            For backwards compatibility, should be replaced in your extension with the constructor that
            uses the BaseDataType from the cms.businesslogic.datatype namespace
            </summary>
            <param name="DataType">The DataType to be parsed (note: the BaseDataType from editorControls is obsolete)</param>
            <param name="DisplayTextBox">Whether to use the default text box</param>
        </member>
        <member name="T:umbraco.editorControls.dictionaryPicker.dictionaryPicker">
            <summary>
            Summary description for dictionaryPicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dictionaryPicker.dictionaryPickerDataType">
            <summary>
            Summary description for dictionaryPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownlist.DropdownListDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownlist.DropdownListKeysDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.folderbrowser.DataTypeFolderBrowser">
            <summary>
            Summary description for DataTypeFolderbrowser.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.folderBrowser">
            <summary>
            Summary description for folderBrowser.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.imagecropper.DataEditor.Save">
            <summary>
            Store data as string XML (overridden by ToXMl to store "real" XML
            XML format:
            <crops dateStamp="">
                <crop name="" x="" y="" x2="" y2="" url="" />
            </crops>
            </summary>
        </member>
        <member name="M:umbraco.editorControls.imagecropper.PrevalueEditor.Save">
            <summary>
            Serialize configuration to:
            uploadPropertyAlias,generateImages,quality,showLabel|presetTemplateName,targetWidth,targetHeight,keepAspect;
            </summary>
        </member>
        <member name="T:umbraco.editorControls.imagecropper.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.imagecropper.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.imagecropper.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.imagecropper.Resources.imageCropperScript">
             <summary>
               Looks up a localized string similar to function initImageCropper(imageId, jsonId, rawId) {
              $(function() {
                $(&apos;.header a&apos;).click(function() {
                  initJcrop(imageId, jsonId, rawId); // if other tab
                });
                $(&apos;#&apos; + imageId).ready(function() {
                  setTimeout(&apos;initJcrop(&quot;&apos; + imageId + &apos;&quot;,&quot;&apos; + jsonId + &apos;&quot;,&quot;&apos; + rawId + &apos;&quot;)&apos;,100); 
                  //initJcrop(imageId, jsonId, rawId); // if first tab
                });
              });
            }
            
            function initJcrop(imageId, jsonId, rawId) {
            
              if ($(&apos;#&apos; + imageId).height() &gt; 0) {
                if ($(&apos;.img&apos; + imageId + &apos;.ic-cr [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:umbraco.editorControls.imagecropper.Resources.jCropCSS" -->
        <member name="P:umbraco.editorControls.imagecropper.Resources.jCropScript">
            <summary>
              Looks up a localized string similar to /**
            * jquery.Jcrop.js v0.9.8
            * jQuery Image Cropping Plugin
            * @author Kelly Hallman &lt;khallman@gmail.com&gt;
            * Copyright (c) 2008-2009 Kelly Hallman - released under MIT License {{{
            *
            * Permission is hereby granted, free of charge, to any person
            * obtaining a copy of this software and associated documentation
            * files (the &quot;Software&quot;), to deal in the Software without
            * restriction, including without limitation the rights to use,
            * copy, modify, merge, publish, distribute, sublicense, and/or s [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.imagecropper.Resources.json2Script">
             <summary>
               Looks up a localized string similar to /*
                http://www.JSON.org/json2.js
                2008-11-19
            
                Public Domain.
            
                NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
            
                See http://www.JSON.org/js.html
            
                This file creates a global JSON object containing two methods: stringify
                and parse.
            
                    JSON.stringify(value, replacer, space)
                        value       any JavaScript value, usually an object or array.
            
                        replacer    an optional parameter that determines how object
                                    values are st [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:umbraco.editorControls.KeyValuePrevalueEditor">
            <summary>
            Summary description for KeyValuePrevalueEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.label.DataTypeNoEdit">
            <summary>
            Summary description for DataTypeNoEdit.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownMultiple">
            <summary>
            Summary description for dropdownMultiple.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.listbox.ListBoxDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.listbox.ListBoxKeysDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.MacroEditor.RendeFormControls">
            <summary>
            Renders a from based on the properties of the macro
            </summary>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.MacroEditor.AddFormRow(System.Web.UI.Control,System.Web.UI.Control)">
            <summary>
            Add a new TableRow to the table. with two cells that holds the Caption and the  form element
            </summary>
            <param name="name"></param>
            <param name="formElement"></param>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.MacroEditor.CreateUmbracoMacroTag">
            <summary>
            Builds an Umbraco Macro tag if a user selected a macro
            </summary>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.PrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Constructor
            </summary>
            <param name="dataType"></param>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.PrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Initializes controls
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.PrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Initialize the form
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.PrevalueEditor.GetSelectedMacosFromCheckList">
            <summary>
            Returns the selected Macro's in a comma separated string
            </summary>
        </member>
        <member name="M:umbraco.editorControls.macrocontainer.PrevalueEditor.Save">
            <summary>
            Save settings
            </summary>
        </member>
        <member name="P:umbraco.editorControls.macrocontainer.PrevalueEditor.Datatype">
            <summary>
            Reference to the datatype 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.macrocontainer.PrevalueEditor.Editor">
            <summary>
            Reference to the editor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.mediaChooser">
            <summary>
            Summary description for mediaChooser.
            </summary>    
        </member>
        <member name="M:umbraco.editorControls.mediaChooser.RenderJSComponents">
            <summary>
            Renders the required media picker javascript
            </summary>
        </member>
        <member name="M:umbraco.editorControls.mediaChooser.OnInit(System.EventArgs)">
            <summary>
            sets the modal width/height based on properties
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:umbraco.editorControls.mediapicker.MediaChooserScripts">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.mediapicker.MediaChooserScripts.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.mediapicker.MediaChooserScripts.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.mediapicker.MediaChooserScripts.MediaPicker">
             <summary>
               Looks up a localized string similar to /// &lt;reference path=&quot;/umbraco_client/Application/NamespaceManager.js&quot; /&gt;
            
            Umbraco.Sys.registerNamespace(&quot;Umbraco.Controls&quot;);
            
            (function($) {
                Umbraco.Controls.MediaChooser = function(label, mediaIdValueClientID, previewContainerClientID, imgViewerClientID, mediaTitleClientID, mediaPickerUrl, width, height, umbracoPath) {
                    return {
                        _mediaPickerUrl: mediaPickerUrl,
                        _webServiceUrl: umbracoPath + &quot;/webservices/legacyAjaxCalls.asmx/GetNodeName&quot;,
                        _label: labe [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:umbraco.editorControls.memberPicker">
            <summary>
            Summary description for memberPicker.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.memberPicker.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions">
            <summary>
            BaseTree extensions for MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.SetNullTreeRootNode(umbraco.cms.presentation.Trees.BaseTree,System.Int32,umbraco.cms.presentation.Trees.XmlTreeNode@,System.String)">
            <summary>
            Determines if it needs to render a null tree based on the start node id and returns true if it is the case. 
            </summary>
            <param name="tree"></param>
            <param name="startNodeId"></param>
            <param name="rootNode"></param>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetStartNodeId(umbraco.cms.presentation.Trees.BaseTree,umbraco.cms.businesslogic.Content,umbraco.cms.businesslogic.Content)">
            <summary>
            Used to determine the start node id while taking into account a user's security
            </summary>
            <param name="tree"></param>
            <param name="definedStartNode"></param>
            <param name="userStartNode"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetDataTypeId(umbraco.cms.presentation.Trees.BaseTree)">
            <summary>
            Returns the data type id for the current base tree
            </summary>
            <remarks>
            The data type definition id is persisted between request as a query string.
            This is used to retrieve values from the cookie which are easier persisted values
            than trying to append everything to custom query strings.
            </remarks>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetXPathFromCookie(umbraco.cms.presentation.Trees.BaseTree,System.Int32)">
            <summary>
            return the xpath statement stored in the cookie for this control id
            </summary>
            <param name="tree"></param>
            <param name="dataTypeDefId"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetXPathFilterTypeFromCookie(umbraco.cms.presentation.Trees.BaseTree,System.Int32)">
            <summary>
            Returns the xpath filter from the cookie for the current data type
            </summary>
            <param name="tree"></param>
            <param name="dataTypeDefId"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetPersistedCookieValue``1(umbraco.cms.presentation.Trees.BaseTree,System.Func{System.Web.HttpCookie,``0},``0)">
            <summary>
            Helper method to return the persisted cookied value for the tree
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tree"></param>
            <param name="output"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.BaseTreeExtensions.GetTreeServiceUrlWithParams(umbraco.cms.presentation.Trees.BaseTree,System.Int32,System.Int32)">
            <summary>
            This will return the normal service url based on id but will also ensure that the data type definition id is passed through as the nodeKey param
            </summary>
            <param name="tree">The tree.</param>
            <param name="id">The id.</param>
            <param name="dataTypeDefId">The data type def id.</param>
            <returns></returns>
            <remarks>
            We only need to set the custom source to pass in our extra NodeKey data.
            By default the system will use one or the other: Id or NodeKey, in this case
            we are sort of 'tricking' the system and we require both.
            Umbraco allows you to theoretically pass in any source as long as it meets the standard
            which means you can pass around any arbitrary data to your trees in the form of a query string,
            though it's just a bit convoluted to do so.
            </remarks>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree">
            <summary>
            FilteredContentTree for the MultiNodeTreePicker
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree"/> class.
            </summary>
            <param name="app">The app.</param>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.m_UserStartNodeDoc">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.m_DefinedStartNodeDoc">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.m_DeterminedStartNodeId">
            <summary>
            The start node id determined by the defined id and by the user's defined id
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.CreateRootNode(umbraco.cms.presentation.Trees.XmlTreeNode@)">
            <summary>
            Creates the root node.
            </summary>
            <param name="rootNode">The root node.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.OnRenderNode(umbraco.cms.presentation.Trees.XmlTreeNode@,umbraco.cms.businesslogic.web.Document)">
            <summary>
            Called when [render node].
            </summary>
            <param name="xNode">The x node.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.UserStartNodeDoc">
            <summary>
            Returns the Document object of the starting node for the current User. This ensures
            that the Document object is only instantiated once.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.DefinedStartNodeDoc">
            <summary>
            Returns the Document object of the starting node that is defined in the prevalue editor. This ensures
            that the Document object is only instantiated once.
            </summary>        
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredContentTree.StartNodeID">
            <summary>
            Determines the allowed start node id based on the users start node id and the 
            defined start node id in the data type.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree">
            <summary>
            FilteredMediaTree for the MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree"/> class.
            </summary>
            <param name="app">The app.</param>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.m_UserStartNodeMedia">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.m_DefinedStartNodeMedia">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.m_DeterminedStartNodeId">
            <summary>
            The start node id determined by the defined id and by the user's defined id
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.CreateRootNode(umbraco.cms.presentation.Trees.XmlTreeNode@)">
            <summary>
            Creates the root node.
            </summary>
            <param name="rootNode">The root node.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.OnBeforeNodeRender(umbraco.cms.presentation.Trees.XmlTree@,umbraco.cms.presentation.Trees.XmlTreeNode@,System.EventArgs)">
            <summary>
            Called when [before node render].
            </summary>
            <param name="sender">The sender.</param>
            <param name="node">The node.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.UserStartNodeDoc">
            <summary>
            Returns the Media object of the starting node for the current User. This ensures
            that the Media object is only instantiated once.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.DefinedStartNodeMedia">
            <summary>
            Returns the Media object of the starting node that is defined in the prevalue editor. This ensures
            that the Media object is only instantiated once.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.FilteredMediaTree.StartNodeID">
            <summary>
            Determines the allowed start node id based on the users start node id and the 
            defined start node id in the data type.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions">
            <summary>
             A helper class to store and retrieve cookie values for the MNTP cookie.
            </summary>
            <remarks>
            The cookie is used to persist values from the client to the server since 
            it is much more complicated to try to persist these values between ajax request, 
            given the tree's current architecture.
            </remarks>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Xpf">
            <summary>
            XPath filter
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Xpft">
            <summary>
            XPath filter type
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Sn">
            <summary>
            Start node
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snxet">
            <summary>
            Start node xpath expression type
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snst">
            <summary>
            Start node select type
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Snxe">
            <summary>
            Start node xpath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.HttpCookieExtensions.CookieVals.Ceni">
            <summary>
            Current editing node id
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.MNTPResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_MaxItemsAllowed">
            <summary>
              Looks up a localized string similar to The maximum number of items that are allowed to be selected by a content editor. If an unlimited number of node selections should be allowed, then enter -1 as the value.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_MinItemsAllowed">
            <summary>
              Looks up a localized string similar to The minimum number of items that are allowed to be selected by a content editor..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_NodeSelectionType">
            <summary>
              Looks up a localized string similar to Nodes can be selected from a parent node (Node Picker) or by an XPath expression. NOTE:When using an XPath expression, only published nodes can be shown..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_ShowThumbnails">
            <summary>
              Looks up a localized string similar to If enabled and &apos;media&apos; is selected as the tree type then a thumbnail will be rendered for each item selected..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_ShowTooltips">
            <summary>
              Looks up a localized string similar to If enabled will show an information icon next to each node selected. When the icon is clicked, a tooltip is shown displaying the nodes extended properties..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_StartNodeId">
            <summary>
              Looks up a localized string similar to Define the starting node that should be rendered for the picker. This will ensure that the correct security measures are in place by checking the defined start node ID for the user accessing the picker. In some cases, if the user is not able to view the node, then the picker will render an error message..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_StoreAsComma">
            <summary>
              Looks up a localized string similar to You can specify to store the data in Umbraco as comma separated or as XML. By default it is stored as XML which makes it easier to use the saved value in XSLT, however, storing it as comma separated makes it easier to work with the data using the API such as Node factory..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_XPathExpression">
            <summary>
              Looks up a localized string similar to This XPath expression is used to select a starting node and depends on the XPath expression type chosen (global or from current). IMPORTANT: This XPath expression should be written to match ONE node, if the expression matches more than one node, then the first node matched will be used as the start node..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_XPathExpressionType">
            <summary>
              Looks up a localized string similar to The XPath expression that is evaluated to match a start node can be evaluated at a global tree level, or matched from the current node being edited..
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_XPathFilter">
            <summary>
              Looks up a localized string similar to An xpath filter to match nodes that will be either enabled or disabled from being clicked (depending on what is selected for the XPath filter type). This XPath filter is for one node only so it should be formatted to select only one node. The XML to XPath against is the same as the Umbraco XML for one node.&lt;br/&gt;&lt;br/&gt;Example: /*[name()=&apos;myNodeType&apos; or name()=&apos;yourNodeType&apos;] &lt;br/&gt;&lt;br/&gt;The above would make all nodes of types: myNodeType or yourNodeType not selectable in the tree.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Desc_XPathFilterType">
            <summary>
              Looks up a localized string similar to Should the XPath filter match nodes to enable nodes or disable nodes. If Enable is selected, this means that only nodes that match the XPath filter will be allowed to be selected in the tree picker and vise versa for Disabled.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_NodeSelectionType_Picker">
            <summary>
              Looks up a localized string similar to Node Picker.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_NodeSelectionType_XPath">
            <summary>
              Looks up a localized string similar to XPath Expression.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_XPathExpressionType_CurrentNode">
            <summary>
              Looks up a localized string similar to From Current.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_XPathExpressionType_Global">
            <summary>
              Looks up a localized string similar to Global.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_XPathMatchType_Disable">
            <summary>
              Looks up a localized string similar to Disable.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Item_XPathMatchType_Enable">
            <summary>
              Looks up a localized string similar to Enable.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_ControlHeight">
            <summary>
              Looks up a localized string similar to Pixel height of the tree control box.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_MaxItemsAllowed">
            <summary>
              Looks up a localized string similar to Maximum node selections.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_MinItemsAllowed">
            <summary>
              Looks up a localized string similar to Minimum node selections.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_NodeSelectionType">
            <summary>
              Looks up a localized string similar to Node selection type.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_SelectTreeType">
            <summary>
              Looks up a localized string similar to Select tree type.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_ShowItemInfoTooltipCheckBox">
            <summary>
              Looks up a localized string similar to Show tooltip for selected item.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_ShowThumbnails">
            <summary>
              Looks up a localized string similar to Show thumbnails for media items?.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_StartNodeId">
            <summary>
              Looks up a localized string similar to Start node ID.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_StoreAsComma">
            <summary>
              Looks up a localized string similar to Data as CSV or XML? .
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_XPathExpression">
            <summary>
              Looks up a localized string similar to XPath expression.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_XPathExpressionType">
            <summary>
              Looks up a localized string similar to XPath type.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_XPathFilter">
            <summary>
              Looks up a localized string similar to XPath filter.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Lbl_XPathFilterType">
            <summary>
              Looks up a localized string similar to XPath filter type.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Val_ControlHeightMsg">
            <summary>
              Looks up a localized string similar to Please enter a pixel value between 1 - 999.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Val_MaxItemsMsg">
            <summary>
              Looks up a localized string similar to Please enter only numbers.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Val_MinItemsInvalid">
            <summary>
              Looks up a localized string similar to The highlighted Multi Node Tree Picker property requires a minimum node selection of {0}.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Val_MinItemsMsg">
            <summary>
              Looks up a localized string similar to Please enter only numbers.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTPResources.Val_RelativeXpath">
            <summary>
              Looks up a localized string similar to A relative xpath expression cannot start with &quot;/&quot; or &quot;//&quot;.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor">
            <summary>
            The user interface to display to the content editor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.#cctor">
            <summary>
            This adds our filtered tree definition to the TreeDefinitionCollection at runtime
            instead of having to declare it in the database 
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor"/> class.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.MinItemsValidator">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.TreePickerControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.SelectedValues">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.PickedValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.RightColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.CreateChildControls">
            <summary>
            Creates the child controls for this control
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.DataBind">
            <summary>
            Ensure the repeater is data bound
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.SelectedValues_ItemDataBound(System.Object,System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            Event handler for the selected node repeater. 
            This will fill in all of the text values, icons, etc.. for nodes based on their ID.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.OnPreRender(System.EventArgs)">
            <summary>
            set the nodekey to the id of this datatype
            </summary>
            <remarks>
            this is how get the xpath out of the cookie to know how the tree knows how to filter things.
            generally the nodekey is used for a string id, but we'll use it for something different.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override render to control the exact output of what is rendered this includes instantiating the jquery plugin
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
            <remarks>
            Generally i don't like to do this but there's a few div's, etc... to render so this makes more sense.
            </remarks>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.ConvertToXDocument(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            converts a list of Ids to the XDocument structure
            </summary>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.RenderTooltip(System.Web.UI.HtmlTextWriter)">
            <summary>
            this will render the tooltip object on the page so long as another 
            one hasn't already been registered. There should only be one tooltip.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.SavePersistentValuesForTree(System.String)">
            <summary>
            This will update the multi-node tree picker data which is used to store
            the xpath data and xpath match type for this control id.
            </summary>
            <param name="xpath">The xpath.</param>
            <remarks>
            This will save the data into a cookie and also into the request cookie. It must save
            it to both locations in case the request cookie has been changed and the request cookie
            is different than the response cookie.
            </remarks>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.IconPath">
            <summary>
            A reference path to where the icons are actually stored as compared to where the tree themes folder is
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.Value">
            <summary>
            This is used for validation purposes only, see the [ValidationProperty("Value")] attribute above.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.SelectedIds">
            <summary>
            gets/sets the value based on an array of IDs selected
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.XmlValue">
            <summary>
            get/set the value for the selected nodes in xml format
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.PropertyName">
            <summary>
            The property name being edited with the current data editor. This is used for the min items validation statement.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.TreeToRender">
            <summary>
            The tree type alias to render
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.XPathFilter">
            <summary>
             An xpath filter to match nodes that will be disabled from being clicked
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.MinNodeCount">
            <summary>
            The minimum amount of nodes that can be selected
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.MaxNodeCount">
            <summary>
            The maximum amount of nodes that can be selected
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.StartNodeId">
            <summary>
            The start node id
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.StartNodeSelectionType">
            <summary>
            The start node selection type
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.StartNodeXPathExpressionType">
            <summary>
            The xpath expression type to select the start node when the StartNodeSelectionType is XPath
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.StartNodeXPathExpression">
            <summary>
            The XPath expression to use to determine the start node when the StartNodeSelectionType is XPath
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.ShowToolTips">
            <summary>
            Gets or sets a value indicating whether [show tool tips].
            </summary>
            <value><c>true</c> if [show tool tips]; otherwise, <c>false</c>.</value>
            <remarks>Shows/Hides the tooltip info bubble.</remarks>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.XPathFilterMatchType">
            <summary>
            The XPathFilterType to match
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.ShowThumbnailsForMedia">
            <summary>
            Gets or sets a value indicating whether [show thumbnails for media].
            </summary>
            <value>
            	<c>true</c> if [show thumbnails for media]; otherwise, <c>false</c>.
            </value>
            <remarks>Whether or not to show thumbnails for media</remarks>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.MediaTypesWithThumbnails">
            <summary>
            A list of media type names that can have thumbnails (i.e. 'image')
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.DataTypeDefinitionId">
            <summary>
            This is set by the data type and allows us to save a cookie value
            for persistence for the data type.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataEditor.ControlHeight">
            <summary>
            The height of the tree control box in pixels
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType">
            <summary>
            Multi-node tree picker data type
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType"/> class.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.m_Tree">
            <summary>
            The internal tree picker control to render
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.m_PreValues">
            <summary>
            Internal pre value editor to render
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.Tree_Init(System.Object,System.EventArgs)">
            <summary>
            Initialize the tree, here's where we can set some initial properties for the tree
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.Tree_Load(System.Object,System.EventArgs)">
            <summary>
            Set the data source for the editor
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Handle the saving event, need to give data to Umbraco
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.ClearCookiePersistence">
            <summary>
            Helper method to ensure the pesistence cookie is cleared.
            This is used on app startup and after editing the pre-value editor
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.Id">
            <summary>
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.DataTypeName">
            <summary>
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.Data">
            <summary>
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.StoreAsCommaDelimited">
            <summary>
            Value indicating whether to store as comma separated or Xml
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_DataType.PrevalueEditor">
            <summary>
            return a custom pre value editor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor">
            <summary>
            The pre-value editor for the multi node tree picker.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeightTextBox">
            <summary>
            The control height text box
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeSelectionTypeRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartContentNodeIdPicker">
            <summary>
            The start node id content picker
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartMediaNodeIdPicker">
            <summary>
            The start node id media picker
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionTypeRadioButtons">
            <summary>
            XPath expression type radio button list
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowThumbnailsForMediaCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.TreeTypeDropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.MaxItemsTextBox">
            <summary>
            Text box for maximum amount of items
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.MinItemsTextBox">
            <summary>
            Text box for minimum amount of items
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.NumbersMinItemsValidator">
            <summary>
            Minimum items validator
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.RelativeXpathValidator">
            <summary>
            Validator for validating relative xpath expressions
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.NumbersMaxItemsValidator">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeightValidatator">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowItemInfoTooltipCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StoreAsCommaDelimitedRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterTypeRadioButtons">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Override on init to ensure child controls
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Ensures the css to render this control is included.
            Binds the saved value to the drop down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.AddPreValueRow(System.String,System.String,System.Web.UI.Control[])">
            <summary>
            Helper method to add a server side pre value row
            </summary>
            <param name="lbl"></param>
            <param name="description"></param>
            <param name="ctl"></param>
            <remarks>
            Using server side syntax because of the post backs and because i don't want to manage the view state manually
            </remarks>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.OnPreRender(System.EventArgs)">
            <summary>
            Hides/Shows controls based on the selection of other controls
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            render our own custom markup
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.GetPreValues">
            <summary>
            Lazy loads the prevalues for this data type
            </summary>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.Save">
            <summary>
            Saves data to Umbraco
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.SavePreValue(umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex,System.String,System.Collections.SortedList)">
            <summary>
            Helper method to save/create pre value values in the db
            </summary>
            <param name="propIndex"></param>
            <param name="value"></param>
            <param name="currentVals"></param>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.GetPreValue``1(umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex,System.Func{umbraco.cms.businesslogic.datatype.PreValue,``0},``0)">
            <summary>
             Generic method to return a strongly typed object from the pre value bucket
            </summary>
            <param name="index"></param>
            <param name="output"></param>
            <param name="defaultVal"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.SelectedTreeType">
            <summary>
            The chosen tree type to render
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilter">
            <summary>
            An xpath filter to disable nodes to be selectable
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.MaxNodeCount">
            <summary>
            The number of nodes this picker will support picking
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.MinNodeCount">
            <summary>
            The minimum number of nodes this picker will support picking
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowToolTip">
            <summary>
            A boolean value indicating whether or not to show the informational tool tips 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StoreAsCommaDelimited">
            <summary>
            Value to check if the data should be stored as CSV or XML
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpression">
            <summary>
            The XPath expression used when the node type selection is Xpath
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeXPathExpressionType">
            <summary>
            The type of xpath expression used for the xpathexpressiontext if using an xpath node selection
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeSelectionType">
            <summary>
            The type of selection type to use for the start node
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.XPathFilterMatchType">
            <summary>
            The type of xpath filter applied
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.StartNodeId">
            <summary>
            The start node id used when the node selection is a picker
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ShowThumbnailsForMedia">
            <summary>
            A boolean value indicating whether or not to show the thumbnails for media 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.ControlHeight">
            <summary>
             Returns the control height in pixels
            </summary>
        </member>
        <member name="P:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.Editor">
            <summary>
             returns this as it's own editor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.MNTP_PrevalueEditor.PropertyIndex">
            <summary>
            Used to determine the index number of where the property is saved in the pre values repository
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.NodeSelectionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.NodeSelectionType.Picker">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.NodeSelectionType.XPathExpression">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.SelectedItemsTemplate">
            <summary>
            The item template for the selected items repeater
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.SelectedItemsTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Creates the template for the repeater item
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.XmlTreeNodeExtensions">
            <summary>
            XmlTreeNode extensions for the MultiNodeTreePicker.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultiNodeTreePicker.XmlTreeNodeExtensions.DetermineClickable(umbraco.cms.presentation.Trees.XmlTreeNode,System.String,umbraco.editorControls.MultiNodeTreePicker.XPathFilterType,System.Xml.Linq.XElement)">
            <summary>
            Determines if the node should be clickable based on the xpath given
            </summary>
            <param name="node">The node.</param>
            <param name="xpath">The xpath.</param>
            <param name="type">The type.</param>
            <param name="xml">The XML.</param>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.XPathExpressionType">
            <summary>
            An enumerator for the XPath expression.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.XPathExpressionType.Global">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.XPathExpressionType.FromCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultiNodeTreePicker.XPathFilterType">
            <summary>
            An enumerator for the XPath filter, for either enable/disable.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.XPathFilterType.Disable">
            <summary>
            Disables the XPath filter.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultiNodeTreePicker.XPathFilterType.Enable">
            <summary>
            Enables the XPath filter.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl">
            <summary>
            The MultipleTextstring control sets a character limit on a TextBox.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.values">
            <summary>
            Field for the list of values.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.SelectedValues">
            <summary>
            The HiddenField to store the selected values.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.IsValid">
            <summary>
            Gets the value of IsValid.
            </summary>
            <value>Returns 'Valid' if valid, otherwise an empty string.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringControl.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType">
            <summary>
            Data Editor for the Multiple Textstring data type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.m_Control">
            <summary>
            The control for the Multiple Textstring data-editor.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.m_Data">
            <summary>
            The Data object for the data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.m_PreValueEditor">
            <summary>
            The PreValue Editor for the data-type.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.m_Control_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Saves the data for the editor control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.Data">
            <summary>
            Gets the data for the data-type.
            </summary>
            <value>The data for the data-type.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions">
            <summary>
            The options for the Multiple Textstring data-type.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [load defaults].</param>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:umbraco.editorControls.MultipleTextstring.MultipleTextstringOptions.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor">
            <summary>
            The PreValue Editor for the Multiple Textstring data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.TextBoxMaximum">
            <summary>
            The TextBox control for the maximum value of the control.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.TextBoxMinimum">
            <summary>
            The TextBox control for the minimum value of the control.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.MultipleTextstring.MultipleTextstringPrevalueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="T:umbraco.editorControls.numberfield.DataInteger">
            <summary>
            Summary description for DataInteger.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.numberfield.IDataTypenteger">
            <summary>
            Summary description for IDataTypenteger.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.numberField.Text">
            <summary>
            The setter ensures that only valid integers are saved - this is to prevent invalid types from being saved into an int db field
            </summary>
        </member>
        <member name="T:umbraco.editorControls.pagePicker">
            <summary>
            Summary description for pagePicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.pagepicker.PagePickerDataType">
            <summary>
            Summary description for PagePickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.PrevalueEditorExtensions">
            <summary>
            Extension methods for the Prevalue Editor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.PrevalueEditorExtensions.AddPrevalueControls(System.Web.UI.ControlCollection,System.Web.UI.Control[])">
            <summary>
            Adds the prevalue controls.
            </summary>
            <param name="collection">The collection.</param>
            <param name="controls">The controls.</param>
        </member>
        <member name="M:umbraco.editorControls.PrevalueEditorExtensions.AddPrevalueHeading(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Adds the prevalue row heading.
            </summary>
            <param name="writer">The writer.</param>
            <param name="heading">The heading.</param>
        </member>
        <member name="M:umbraco.editorControls.PrevalueEditorExtensions.AddPrevalueRow(System.Web.UI.HtmlTextWriter,System.String,System.Web.UI.Control[])">
            <summary>
            Adds a new row to the Prevalue Editor.
            </summary>
            <param name="writer">The HtmlTextWriter.</param>
            <param name="label">The label for the field.</param>
            <param name="controls">The controls for the field.</param>
        </member>
        <member name="M:umbraco.editorControls.PrevalueEditorExtensions.AddPrevalueRow(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Web.UI.Control[])">
            <summary>
            Adds a new row to the Prevalue Editor, (with an optional description).
            </summary>
            <param name="writer">The HtmlTextWriter.</param>
            <param name="label">The label for the field.</param>
            <param name="description">The description for the field.</param>
            <param name="controls">The controls for the field.</param>
        </member>
        <member name="T:umbraco.editorControls.PropertyTypePicker">
            <summary>
            Summary description for propertyTypePicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.radiobuttonlist.RadioButtonListDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.relatedlinks.PagePickerDataExtractor">
            <summary>
            Allows for the extraction of the link ID for the selected node of the
            PagePicker (aka content picker) class for integration of the PagePicker
            in another datatype.
            This class replaces the database linkup that normally holds the data and
            stores the data locally in memory and allows for easy access to the
            data (after the IDataEditor has performed a save()).
            This class was not designed for, but might work equally well for other datatypes.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.relatedlinks.RelatedLinksDataEditor.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="T:umbraco.editorControls.ResourceExtensions">
            <summary>
            Extension methods for embedded resources
            </summary>
        </member>
        <member name="M:umbraco.editorControls.ResourceExtensions.RegisterEmbeddedClientResource(System.Web.UI.Control,System.String,ClientDependency.Core.ClientDependencyType)">
            <summary>
            Registers the embedded client resource.
            </summary>
            <param name="ctl">The control.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:umbraco.editorControls.ResourceExtensions.RegisterEmbeddedClientResource(System.Web.UI.Control,System.Type,System.String,ClientDependency.Core.ClientDependencyType)">
            <summary>
            Registers the embedded client resource.
            </summary>
            <param name="ctl">The control.</param>
            <param name="resourceContainer">The resource container.</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:umbraco.editorControls.ResourceExtensions.RegisterEmbeddedClientResource(System.Web.UI.Page,System.Type,System.String,ClientDependency.Core.ClientDependencyType)">
            <summary>
            Registers the embedded client resource.
            </summary>
            <param name="page">The page.</param>
            <param name="resourceContainer">The type containing the embedded resource</param>
            <param name="resourceName">Name of the resource.</param>
            <param name="type">The type.</param>
        </member>
        <member name="T:umbraco.editorControls.simpleEditor.SimpleEditor">
            <summary>
            Summary description for simpleEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.simpleEditor.simpleEditorDataType">
            <summary>
            Summary description for simpleEditorDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.Slider.SliderControl">
            <summary>
            The jQuery UI Slider control.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderControl.OnInit(System.EventArgs)">
            <summary>
            Initialize the control, make sure children are created
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderControl.OnLoad(System.EventArgs)">
            <summary>
            Add the resources (sytles/scripts)
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderControl.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderControl.Options">
            <summary>
            Gets or sets the slider options.
            </summary>
            <value>The slider options.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderControl.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderControl.TextBoxControl">
            <summary>
            Gets or sets the TextBox control that contains the value(s) of the slider.
            </summary>
            <value>The text box control.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderControl.DivSliderControl">
            <summary>
            Gets or sets the HtmlGenericControl control for the slider &lt;div&gt; tag.
            </summary>
            <value>The div slider control.</value>
        </member>
        <member name="T:umbraco.editorControls.Slider.SliderDataType">
            <summary>
            A jQuery UI Slider data-type for Umbraco.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderDataType.m_Control">
            <summary>
            The SliderControl.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderDataType.m_PreValueEditor">
            <summary>
            The PreValue Editor for the data-type.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderDataType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.Slider.SliderDataType"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderDataType.m_Control_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the m_Placeholder control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderDataType.DataEditorControl_OnSave(System.EventArgs)">
            <summary>
            Saves the editor control value.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderDataType.Id">
            <summary>
            Gets the id of the data-type.
            </summary>
            <value>The id of the data-type.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="T:umbraco.editorControls.Slider.SliderOptions">
            <summary>
            The options for the Slider data-type.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.Slider.SliderOptions"/> class.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.Slider.SliderOptions"/> class.
            </summary>
            <param name="loadDefaults">if set to <c>true</c> [loads defaults].</param>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.EnableRange">
            <summary>
            Gets or sets a value indicating whether [enable range].
            </summary>
            <value><c>true</c> if [enable range]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.EnableStep">
            <summary>
            Gets or sets a value indicating whether [enable step].
            </summary>
            <value><c>true</c> if [enable step]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.RangeValue">
            <summary>
            Gets or sets the range value.
            </summary>
            <value>The range value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.StepValue">
            <summary>
            Gets or sets the step.
            </summary>
            <value>The step.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.Value2">
            <summary>
            Gets or sets the second value.
            </summary>
            <value>The second value.</value>
        </member>
        <member name="P:umbraco.editorControls.Slider.SliderOptions.DBType">
            <summary>
            Gets or sets the Database Storage Type 
            </summary>
        </member>
        <member name="T:umbraco.editorControls.Slider.SliderPrevalueEditor">
            <summary>
            The PreValue Editor for the Slider data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.DatabaseDataType">
            <summary>
            The DropDownList for the database data-type.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.EnableRange">
            <summary>
            The CheckBox control to enable the range for the slider.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.EnableStep">
            <summary>
            The CheckBox control to enable incremental steps for the slider.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.MinValue">
            <summary>
            The TextBox control for the minimum value of the slider.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.MaxValue">
            <summary>
            The TextBox control for the maximum value of the slider.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.Orientation">
            <summary>
            The DropDownList control for the orientation of the slider.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.RangeValue">
            <summary>
            The DropDownList control for the range value.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.StepValue">
            <summary>
            The TextBox control for the incremental step value.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.Value">
            <summary>
            The TextBox control for the first value input.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.Slider.SliderPrevalueEditor.Value2">
            <summary>
            The TextBox control for the second value input.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.Slider.SliderPrevalueEditor"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.Save">
            <summary>
            Saves the data-type PreValue options.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.CreateChildControls">
            <summary>
            Creates child controls for this control
            </summary>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:umbraco.editorControls.Slider.SliderPrevalueEditor.ToggleFields">
            <summary>
            Toggles the fields.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getEverythingWithTags(System.String)">
             <summary>
             Gets everything (content, media, members) in Umbraco with the specified tags.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getContentsWithTags(System.String)">
             <summary>
             Gets all content nodes in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getMembersWithTags(System.String)">
             <summary>
             Returns all members (does not care about groups and types) in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Comma separated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getMediaWithTags(System.String)">
             <summary>
             Returns all media nodes in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getAllTags" -->
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getAllTagsInGroup(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getTagsFromNode(System.String)" -->
        <member name="M:umbraco.editorControls.tags.library.GetTagsFromNodeAsITags(System.Int32)">
            <summary>
            Gets the tags from node as ITag objects.
            </summary>
            <param name="nodeId">The node id.</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.GetTagsFromGroupAsITags(System.String)">
            <summary>
            Gets the tags from group as ITag objects.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.GetTagsAsITags">
            <summary>
            Gets all the tags as ITag objects
            </summary>
            <param name="nodeId">The node id.</param>
            <returns></returns>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection">
            <summary>
            Description of ConfigSection.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.InstallPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GlobalSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipExpiresOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipDiskCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipCachePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipNoCompression">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor">
            <summary>
            Description of GzipCompressor.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.AddFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.AddData(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.Compress(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="to_stream"></param>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.NoCompression">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.DiskCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.CachePath">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipModule">
            <summary>
            Description of HttpHandler.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.IModule">
            <summary>
            Description of IAction.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.IModule.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipModule.ProcessRequest(System.Web.HttpContext)">
            <summary></summary>
            <param name="context">Request context.</param>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON">
            <summary>
            Description of JSON.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.SerializeRPC(System.String,System.Object,System.Object,System.IO.Stream)">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.WriteObject(System.IO.TextWriter,System.Object)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.ParseJSON(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.ParseRPC(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Args">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Boolean">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Integer">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.String">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Null">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Float">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.StartArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.EndArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.PropertyName">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.StartObject">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.EndObject">
            <summary> </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader">
            <summary>
             Description of JSONReader.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.#ctor(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.InArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.InObject">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.Normal">
            <summary> </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter">
            <summary>
            Description of JSONWriter.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.#ctor(System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteStartObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteEndObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteStartArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteEndArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WritePropertyName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteProperty(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteValue(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteNull">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.EncodeString(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.addListControlNode(umbraco.cms.businesslogic.Content,System.Int32,System.Boolean,System.Web.UI.WebControls.ListControl,System.String[])">
            <summary>
            Adds sub nodes to the ListControl object passed into the method, based on the Content node passed in
            </summary>
            <param name="node">The node whos sub nodes are to be added to the ListControl</param>
            <param name="level">The level of the current node</param>
            <param name="showGrandChildren">Boolean determining if grand children should be displayed as well</param>
            <param name="control">The ListControl the nodes must be added to</param>
            <param name="documentAliasFilter">String representing the documentTypeAlias that should be filtered for. If empty no filter is applied</param>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.setupAutoComplete(System.Int32)">
            <summary>
            Sets up the autocomplete functionality
            </summary>
        </member>
        <member name="P:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerPrevalueEditor.validateFilterInput(System.String)">
            <summary>
            Validates and clears the filter input from errorneous entries
            </summary>
            <param name="filterInput">The filter string to be validated</param>
            <returns>A validated filtered comma separated string</returns>
        </member>
        <member name="T:umbraco.editorControls.uploadfield.DataTypeUploadField">
            <summary>
            Summary description for DataTypeUploadField.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.uploadfield.DataTypeUploadField.DataEditor">
            <summary>
            Always returns an uploadField control
            </summary>
        </member>
        <member name="P:umbraco.editorControls.uploadfield.DataTypeUploadField.Data">
            <summary>
            Always returns FileHandlerData
            </summary>
        </member>
        <member name="M:umbraco.editorControls.uploadField.IsValidFile(System.Web.HttpPostedFile)">
            <summary>
            Checks if the file is valid based on our dissallowed file types
            </summary>
            <param name="postedFile"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.uploadField.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:umbraco.editorControls.uploadField.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>   
            <remarks>
            This is used for the required and regex validation of a document type's property
            </remarks>     
        </member>
        <member name="T:umbraco.editorControls.XmlData">
            <summary>
            Overrides the <see cref="T:umbraco.cms.businesslogic.datatype.DefaultData"/> object to return the value as XML.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XmlData.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.XmlData"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:umbraco.editorControls.XmlData.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Converts the data value to XML.
            </summary>
            <param name="data">The data to convert to XML.</param>
            <returns></returns>
        </member>
        <member name="T:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor">
            <summary>
            Renders a CheckBoxList using with option nodes obtained by an XPath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.checkBoxList">
            <summary>
            Field for the checkbox list.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.#ctor(umbraco.interfaces.IData,umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions)">
            <summary>
            Initializes a new instance of XPathCheckBoxListDataEditor
            </summary>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
                <c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType">
            <summary>
            This datatype will render a CheckBoxList where the options are defined by an XPath expression,
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.preValueEditor">
            <summary>
            Field for the preValueEditor.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.dataEditor">
            <summary>
            Field for the dataEditor.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance, 
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="T:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions">
            <summary>
            DataType configuration options for the XPath CheckBoxList
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.type">
            <summary>
            string guid for either a node, media or member
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions"/> class.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.Type">
            <summary>
            Gets or sets the guid as a string representing either a Document, Media or Member
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.XPath">
            <summary>
            Gets or sets the XPath string used to get the Nodes, Media or Members
            </summary>     
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.UseXml">
            <summary>
            Defaults to true, where the property value will be stored as an Xml Fragment, else if false, a Csv will be stored
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.UseIds">
            <summary>
            Defaults to true, where property value stored is NodeIds, else if false, then value stored is the Node Names
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListOptions.UmbracoObjectType">
            <summary>
            Gets the UmbracoObjectType from the stored string guid
            </summary>
            <value>a Document, Media or Member</value>
        </member>
        <member name="T:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor">
            <summary>
            This PreValueEditor will require an XPath expression to define the nodes to pick as CheckBox options,
            TODO: [HR] min / max selections ?
            Uses the shared JsonPreValueEditor as nice way of lightweight serializing a config data class object into a single DB field
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.typeRadioButtonList">
            <summary>
            Radio buttons to select type of node to pick from: Content / Media / Members
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathTextBox">
            <summary>
            TextBox control to get the XPath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathRequiredFieldValidator">
            <summary>
            RequiredFieldValidator to ensure an XPath expression has been entered
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.xPathCustomValidator">
            <summary>
            Server side validation of XPath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.storageTypeRadioButtonList">
            <summary>
            Store an Xml fragment or a Csv
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.valueTypeDropDownList">
            <summary>
            Select Node IDs or Node Names as the values to store
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of XPathCheckBoxlistPreValueEditor
            </summary>
            <param name="dataType">XPathCheckBoxListDataType</param>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.XPathCustomValidator_ServerValidate(System.Object,System.Web.UI.WebControls.ServerValidateEventArgs)">
            <summary>
            Will run the entered XPath expression to ensure it's valid
            </summary>
            <param name="source">xPathCustomValidator</param>
            <param name="args"></param>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:umbraco.editorControls.XPathCheckBoxList.XPathCheckBoxListPreValueEditor.Options">
            <summary>
            Gets the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="T:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor">
            <summary>
            XPath configurabale DropDownList Data Type
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.data">
            <summary>
            Field for the data.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.options">
            <summary>
            Field for the options.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.customValidator">
            <summary>
            Field for the CustomValidator.
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.dropDownList">
            <summary>
            Field for the DropDownList.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.#ctor(umbraco.interfaces.IData,umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions)">
            <summary>
            Initializes a new instance of XPathCheckBoxListDataEditor
            </summary>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.Save">
            <summary>
            Called by Umbraco when saving the node
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether [treat as rich text editor].
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether [show label].
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataEditor.Editor">
            <summary>
            Gets the editor.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.preValueEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.dataEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.data">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.PrevalueEditor">
            <summary>
            Lazy load the associated PreValueEditor instance,
            this is constructed supplying 'this'
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.DataEditor">
            <summary>
            Lazy load the assocated DataEditor, 
            this is constructed supplying the data value stored by the PreValueEditor, and also the configuration settings of the PreValueEditor 
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListDataType.Data">
            <summary>
            Lazy load an empty DefaultData object, this is used to pass data between the PreValueEditor and the DataEditor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions.#ctor">
            <summary>
            Initializes an instance of XPathDropDownListOptions
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions.XPath">
            <summary>
            XPath string used to get Nodes to be used as CheckBox options in a CheckBoxList
            </summary>     
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions.UseId">
            <summary>
            Defaults to true, where property value is a csv of NodeIds, else if false, then csv of Node names is stored
            </summary>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListOptions.UmbracoObjectType">
            <summary>
            Gets the UmbracoObjectType from the stored string guid
            </summary>
            <value>a Document, Media or Member</value>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.typeRadioButtonList">
            <summary>
            Radio buttons to select type of node to pick from: Content / Media / Members
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.xPathTextBox">
            <summary>
            TextBox control to get the XPath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.xPathRequiredFieldValidator">
            <summary>
            RequiredFieldValidator to ensure an XPath expression has been entered
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.xPathCustomValidator">
            <summary>
            Server side validation of XPath expression
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.valueTypeDropDownList">
            <summary>
            Drop Down List to pick either Node Name or Node Id
            </summary>
        </member>
        <member name="F:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.options">
            <summary>
            Data object used to define the configuration status of this PreValueEditor
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType)">
            <summary>
            Initialize a new instance of XPathCheckBoxlistPreValueEditor
            </summary>
            <param name="dataType">XPathCheckBoxListDataType</param>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.CreateChildControls">
            <summary>
            Creates all of the controls and assigns all of their properties
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.XPathCustomValidator_ServerValidate(System.Object,System.Web.UI.WebControls.ServerValidateEventArgs)">
            <summary>
            Will run the entered XPath expression to ensure it returns a collection
            </summary>
            <param name="source">xPathCustomValidator</param>
            <param name="args"></param>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.Save">
            <summary>
            Saves the pre value data to Umbraco
            </summary>
        </member>
        <member name="M:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Replaces the base class writer and instead uses the shared uComponents extension method, to inject consistant markup
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:umbraco.editorControls.XPathDropDownList.XPathDropDownListPreValueEditor.Options">
            <summary>
            Gets the options data object that represents the current state of this datatypes configuration
            </summary>
        </member>
        <member name="T:umbraco.editorControls.yesNo">
            <summary>
            Generates a radiolist of yes and no for boolean fields
            </summary>
        </member>
        <member name="M:umbraco.editorControls.yesNo.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:umbraco.editorControls.yesno.YesNoDataType">
            <summary>
            Summary description for YesNoDataType.
            </summary>
        </member>
    </members>
</doc>
