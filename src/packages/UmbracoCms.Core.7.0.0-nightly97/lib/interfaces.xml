<?xml version="1.0"?>
<doc>
    <assembly>
        <name>interfaces</name>
    </assembly>
    <members>
        <member name="T:umbraco.interfaces.IApplication">
            <summary>
            Interface for created applications in the umbraco backoffice
            </summary>
        </member>
        <member name="T:umbraco.interfaces.IApplicationStartupHandler">
            <summary>
            Any class that implements this interface will be instantiated at application startup
            </summary>
            <remarks>
            NOTE: It is not recommended to use this interface and instead use IApplicationEventHandler
            and bind to any custom events in the OnApplicationInitialized method.
            </remarks>
        </member>
        <member name="T:umbraco.interfaces.IDataFieldWithButtons">
            <summary>
            Summary description for IDataFieldWithButtons.
            </summary>
        </member>
        <member name="T:umbraco.interfaces.IDataEditor">
            <summary>
            The IDataEditor is part of the IDataType interface for creating new data types in the umbraco backoffice. 
            The IDataEditor represents the editing UI for the Data Type.
            </summary>
        </member>
        <member name="M:umbraco.interfaces.IDataEditor.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IDataEditor.ShowLabel">
            <summary>
            Gets a value indicating whether a label is shown
            </summary>
            <value><c>true</c> if [show label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataEditor.TreatAsRichTextEditor">
            <summary>
            Gets a value indicating whether the editor should be treated as a rich text editor. 
            </summary>
            <value>
            	<c>true</c> if [treat as rich text editor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:umbraco.interfaces.IDataEditor.Editor">
            <summary>
            Gets the editor control
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:umbraco.interfaces.ITask">
            <summary>
            Summary description for ITask.
            </summary>
        </member>
        <member name="T:umbraco.interfaces.IAction">
            <summary>
            Summary description for ActionI.
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IAction.JsSource">
            <summary>
            A path to a supporting JavaScript file for the IAction. A script tag will be rendered out with the reference to the JavaScript file.
            </summary>
        </member>
        <member name="T:umbraco.interfaces.ICacheRefresher">
            <summary>
            The IcacheRefresher Interface is used for loadbalancing.
            
            </summary>
        </member>
        <member name="T:umbraco.interfaces.IData">
            <summary>
            The IData is part of the IDataType interface for creating new data types in the umbraco backoffice. 
            The IData represents the actual value entered by the user.
            </summary>
        </member>
        <member name="M:umbraco.interfaces.IData.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Converts the data to XML.
            </summary>
            <param name="data">The data.</param>
            <returns>The data as XML.</returns>
        </member>
        <member name="M:umbraco.interfaces.IData.MakeNew(System.Int32)">
            <summary>
            Creates a new value
            </summary>
            <param name="PropertyId">The property id.</param>
        </member>
        <member name="M:umbraco.interfaces.IData.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IData.PropertyId">
            <summary>
            Gets or sets the property id.
            </summary>
            <value>The property id.</value>
        </member>
        <member name="P:umbraco.interfaces.IData.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:umbraco.interfaces.IDataPrevalue">
            <summary>
            The IDataPrevalue interface is part of the IDataType interface for creating new data types in the umbraco backoffice. 
            The IDataPrevalue represents the editing UI for adding prevalues to the datatype.
            </summary>
        </member>
        <member name="M:umbraco.interfaces.IDataPrevalue.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IDataPrevalue.Editor">
            <summary>
            Gets the editor control.
            </summary>
            <value>The editor.</value>
        </member>
        <member name="T:umbraco.interfaces.IDataType">
            <summary>
            The IDataType is a interface used for adding a new Data type to the umbraco backoffice.
            It consists of IdataEditor which provides the Editing UI, the IDataPrevalue which provides prevalues and th their editing UI
            And finally it contains IData which manages the actual data in the Data Type
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IDataType.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataType.DataTypeName">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataType.DataEditor">
            <summary>
            Gets the data editor.
            </summary>
            <value>The data editor.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataType.PrevalueEditor">
            <summary>
            Gets the prevalue editor.
            </summary>
            <value>The prevalue editor.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataType.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataType.DataTypeDefinitionId">
            <summary>
            Gets or sets the data type definition id.
            </summary>
            <value>The data type definition id.</value>
        </member>
        <member name="P:umbraco.interfaces.IDataWithPreview.PreviewMode">
            <summary>
            Gets or sets a value indicating whether preview mode is switched on.
            In preview mode, the <see cref="!:Value"/> setter saves to a temporary location
            instead of persistent storage, which the getter also reads from on subsequent access.
            Switching off preview mode restores the persistent value.
            </summary>
            <value><c>true</c> if preview mode is switched on; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:umbraco.interfaces.IMacroGuiRendering">
            <summary>
            Summary description for IMacroGuiRendering.
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IMacroGuiRendering.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:umbraco.interfaces.IMacroGuiRendering.ShowCaption">
            <summary>
            Gets a value indicating whether a caption is shown
            </summary>
            <value><c>true</c> if [show caption]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:umbraco.interfaces.IMenuElement">
            <summary>
            IMenuElement is an interface for items in the umbraco backoffice panel menu
            </summary>
        </member>
        <member name="P:umbraco.interfaces.IMenuElement.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
            <value>The name of the element.</value>
        </member>
        <member name="P:umbraco.interfaces.IMenuElement.ElementIdPreFix">
            <summary>
            Gets the element id pre fix.
            </summary>
            <value>The element id pre fix.</value>
        </member>
        <member name="P:umbraco.interfaces.IMenuElement.ElementClass">
            <summary>
            Gets the element class.
            </summary>
            <value>The element class.</value>
        </member>
        <member name="P:umbraco.interfaces.IMenuElement.ExtraMenuWidth">
            <summary>
            Gets the width of the extra menu.
            </summary>
            <value>The width of the extra menu.</value>
        </member>
        <member name="T:umbraco.interfaces.INotFoundHandler">
            <summary>
            Summary description for INotFoundHandler.
            </summary>
        </member>
        <member name="T:umbraco.interfaces.ITree">
            <summary>
            Interface for created application trees in the umbraco backoffice
            </summary>
        </member>
        <member name="M:umbraco.interfaces.ITree.Render(System.Xml.XmlDocument@)">
            <summary>
            Renders the specified tree.
            </summary>
            <param name="Tree">The tree.</param>
        </member>
        <member name="M:umbraco.interfaces.ITree.RenderJS(System.Text.StringBuilder@)">
            <summary>
            Renders the client side script associatied with the tree.
            </summary>
            <param name="Javascript">The javascript.</param>
        </member>
        <member name="P:umbraco.interfaces.ITree.id">
            <summary>
            Sets the tree id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:umbraco.interfaces.ITree.app">
            <summary>
            Sets the applicatin alias.
            </summary>
            <value>The app.</value>
        </member>
    </members>
</doc>
