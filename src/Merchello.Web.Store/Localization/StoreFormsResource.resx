<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidCcExpiresDate" xml:space="preserve">
    <value>The expiration date does not appear to be valid.</value>
    <comment>Error message for an invalid credit card expiraton date</comment>
  </data>
  <data name="InvalidConfirmPassword" xml:space="preserve">
    <value>Password and confirm password fields do not match</value>
    <comment>Error message for password and confirm password comparison</comment>
  </data>
  <data name="InvalidCvv" xml:space="preserve">
    <value>cvv does not appear to be valid.</value>
    <comment>Error message for an invalid credit card cvv</comment>
  </data>
  <data name="InvalidEmailAddress" xml:space="preserve">
    <value>Email address appear to be invalid</value>
    <comment>Error message for an invalid email address</comment>
  </data>
  <data name="LabelAddress1" xml:space="preserve">
    <value>Address line 1</value>
    <comment>Label for address line 1</comment>
  </data>
  <data name="LabelAddress2" xml:space="preserve">
    <value>Address line 2</value>
    <comment>Label for address line 2</comment>
  </data>
  <data name="LabelAddresses" xml:space="preserve">
    <value>Addresses</value>
    <comment>Label for addresses</comment>
  </data>
  <data name="LabelAddressLabel" xml:space="preserve">
    <value>Address label (ex. My House)</value>
    <comment>Label for an address label field</comment>
  </data>
  <data name="LabelCardHolderName" xml:space="preserve">
    <value>Name on card</value>
    <comment>Label for the name on a credit card field</comment>
  </data>
  <data name="LabelConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
    <comment>Label for the confirm password field</comment>
  </data>
  <data name="LabelCountry" xml:space="preserve">
    <value>Country</value>
    <comment>Label for country selection</comment>
  </data>
  <data name="LabelCreditCardNumber" xml:space="preserve">
    <value>Card number</value>
    <comment>Label for a credit card number field</comment>
  </data>
  <data name="LabelCvv" xml:space="preserve">
    <value>cvv</value>
    <comment>Label for a credit card cvv field</comment>
  </data>
  <data name="LabelEmailAddress" xml:space="preserve">
    <value>Email address</value>
    <comment>Label for the email address</comment>
  </data>
  <data name="LabelExpirationDate" xml:space="preserve">
    <value>Expiration date</value>
    <comment>Label for a credit card expiration date</comment>
  </data>
  <data name="LabelFirstName" xml:space="preserve">
    <value>First name</value>
    <comment>Label for the first name field</comment>
  </data>
  <data name="LabelLastName" xml:space="preserve">
    <value>Last name</value>
    <comment>Label for the last name field</comment>
  </data>
  <data name="LabelLocality" xml:space="preserve">
    <value>City</value>
    <comment>Label for locality</comment>
  </data>
  <data name="LabelName" xml:space="preserve">
    <value>Full name</value>
    <comment>Label for the name field</comment>
  </data>
  <data name="LabelOfferCode" xml:space="preserve">
    <value>Offer code</value>
    <comment>Label for an offer code field</comment>
  </data>
  <data name="LabelOrganization" xml:space="preserve">
    <value>Company</value>
    <comment>Label for organziation of company field</comment>
  </data>
  <data name="LabelPassword" xml:space="preserve">
    <value>Password</value>
    <comment>Label for the password field</comment>
  </data>
  <data name="LabelPaymentMethods" xml:space="preserve">
    <value>Payment methods</value>
    <comment>Label for payment methods</comment>
  </data>
  <data name="LabelPhone" xml:space="preserve">
    <value>Phone</value>
    <comment>Label for the phone field</comment>
  </data>
  <data name="LabelPostalCode" xml:space="preserve">
    <value>Postal code</value>
    <comment>Label for the postal code</comment>
  </data>
  <data name="LabelRegion" xml:space="preserve">
    <value>State / Province / Region</value>
  </data>
  <data name="LabelRememberMe" xml:space="preserve">
    <value>Remember me</value>
    <comment>Label for remember me checkbox</comment>
  </data>
  <data name="LabelShipRateQuote" xml:space="preserve">
    <value>Shipping method</value>
    <comment>Label for selecting a shipping method</comment>
  </data>
  <data name="LabelUseForBilling" xml:space="preserve">
    <value>Use this address as the billing address</value>
  </data>
  <data name="LabelUseForShipping" xml:space="preserve">
    <value>Use this address as the shipping address</value>
  </data>
  <data name="LabelUsername" xml:space="preserve">
    <value>Username</value>
    <comment>Label for the user name field</comment>
  </data>
  <data name="LabelWishList" xml:space="preserve">
    <value>Wish List</value>
    <comment>Label for the wish list</comment>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>-- Please Select --</value>
    <comment>Empty select value</comment>
  </data>
  <data name="RequiredAddress" xml:space="preserve">
    <value>Address line is required</value>
    <comment>Error message for a required address field</comment>
  </data>
  <data name="RequiredCardHolderName" xml:space="preserve">
    <value>Name or card is required</value>
    <comment>Error message for a required name on credit card field</comment>
  </data>
  <data name="RequiredConfirmPassword" xml:space="preserve">
    <value>Confirm password is required</value>
    <comment>Error message for a required confirm password field</comment>
  </data>
  <data name="RequiredCountry" xml:space="preserve">
    <value>Country is a required</value>
    <comment>Error message for a required country field</comment>
  </data>
  <data name="RequiredCreditCardNumber" xml:space="preserve">
    <value>Card number is required</value>
    <comment>Error message for a required credit card number field</comment>
  </data>
  <data name="RequiredCvv" xml:space="preserve">
    <value>cvv is required</value>
    <comment>Error message for a required cvv field</comment>
  </data>
  <data name="RequiredEmailAddress" xml:space="preserve">
    <value>Email address is required</value>
    <comment>Error message for a required email address field</comment>
  </data>
  <data name="RequiredExpirationDate" xml:space="preserve">
    <value>Expiration date is required</value>
    <comment>Error message for a required credit card expiration date.</comment>
  </data>
  <data name="RequiredFirstName" xml:space="preserve">
    <value>First name is required</value>
    <comment>Error message for a required first name field</comment>
  </data>
  <data name="RequiredLastName" xml:space="preserve">
    <value>Last name is required</value>
    <comment>Error message for a required last name field</comment>
  </data>
  <data name="RequiredLocality" xml:space="preserve">
    <value>City is required</value>
    <comment>Error message for a required city field</comment>
  </data>
  <data name="RequiredName" xml:space="preserve">
    <value>Full name is required</value>
    <comment>Error message for a required name field</comment>
  </data>
  <data name="RequiredOfferCode" xml:space="preserve">
    <value>Offer code is required</value>
    <comment>Error message for a required offer code field</comment>
  </data>
  <data name="RequiredPassword" xml:space="preserve">
    <value>Password is required</value>
    <comment>Error message for a required password field</comment>
  </data>
  <data name="RequiredPostalCode" xml:space="preserve">
    <value>Postal code is required</value>
    <comment>Error message for a required postal code field</comment>
  </data>
  <data name="RequiredRegion" xml:space="preserve">
    <value>State or Provice is required</value>
    <comment>Error message for state or province field</comment>
  </data>
  <data name="RequiredUsername" xml:space="preserve">
    <value>Username is required</value>
    <comment>Error message for a required username field</comment>
  </data>
  <data name="LabelOldPassword" xml:space="preserve">
    <value>Current Password</value>
    <comment>Label for the old password</comment>
  </data>
  <data name="RequiredOldPassword" xml:space="preserve">
    <value>Current Password is required</value>
    <comment>Error message for a required old password field</comment>
  </data>
</root>