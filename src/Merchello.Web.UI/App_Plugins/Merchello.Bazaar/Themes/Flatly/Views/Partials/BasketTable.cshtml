@inherits Umbraco.Web.Mvc.UmbracoViewPage<BasketTableModel>
@using Merchello.Bazaar
@using Merchello.Bazaar.Controllers.Surface
@using Merchello.Bazaar.Models
@using System.Web.Mvc.Html
@using Merchello.Bazaar.Controllers
@using Umbraco.Web
@{
    
    using (Html.BeginUmbracoForm<BasketOperationsController>("UpdateBasket", new { area = "Bazaar" }))
    {
        @Html.AntiForgeryToken()
        <table class="table basket">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{
                    for (var i = 0; i < Model.Items.Count(); i++)
                    {
                        <tr>
                            <td class="image">
                                @Html.HiddenFor(model => Model.Items[i].Key)

                                @if (Model.Items[i].Product == null)
                                {
                                    <span>@Model.Items[i].Name</span>
                                }
                                else
                                {
                                    if (Model.Items[i].Product.HasValue("image"))
                                    {
                                        <a href="@Model.Items[i].Product.Url"><img src="@Model.Items[i].Product.GetCropUrl(propertyAlias: "image", width: 20)" alt="@Model.Items[i].Product.Name" width="20" /></a>
                                    }
                                    <a href="@Model.Items[i].Product.Url"><span>@Model.Items[i].Name</span></a>
                                }
                            </td>
                            <td>@Model.Items[i].FormatUnitPrice(Model.Currency.Symbol)</td>
                            <td>@Html.TextBoxFor(model => Model.Items[i].Quantity, new { @class = "col-xs-2", @type="number" })</td>
                            <td>@Model.Items[i].FormatTotalPrice(Model.Currency.Symbol)</td>
                            <td>
                                <div class="text-right">
                                    @if (Model.ShowWishList)
                                    {
                                        @Html.ActionLink("Wish List +", "MoveItemToWishList", "BasketOperations", new { area = "Bazaar", lineItemKey = Model.Items[i].Key, basketPageId = Model.BasketPageId, wishListPageId = Model.WishListPageId }, new { @class = "btn btn-info" })
                                    }

                                    @Html.ActionLink("Remove", "RemoveItemFromBasket", "BasketOperations", new { area = "Bazaar", lineItemKey = Model.Items[i].Key, basketPageId = Model.BasketPageId }, new { @class = "btn btn-danger" })
                                </div>
                            </td>
                        </tr>
                    }
                }
                <tr>
                    <td colspan="3" class="align-right">Sub Total</td>
                    <td colspan="2">@Model.FormatTotalPrice()</td>
                </tr>
            </tbody>
        </table>

        <div class="row">

            <div class="col-lg-8">
                <a href="@Model.ContinueShoppingPage.Url">Continue Shopping</a>
            </div>
            <div class="col-lg-4 text-right">
                <input type="submit" id="update-cart" class="btn btn-default" name="update" value="Update" />
                <a href="@Model.CheckoutPage.Url" class="btn btn-primary">Checkout</a>
            </div>
        </div>
    }
}