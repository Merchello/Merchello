@inherits Umbraco.Web.Mvc.UmbracoViewPage<CheckoutConfirmationForm>
@using System.Web.Mvc.Html
@using System.Web.Routing
@using Merchello.Bazaar.Models
@using Merchello.Bazaar


<div class="row-fluid" id="checkout-confirmation">

    <div class="col-md-9">
        @Html.ThemedPartial(Model.ThemeName, "InvoiceSummary", Model.InvoiceSummary)
    </div>

    <div class="col-md-3">
        <form>
            <div class="form-group">
                @Html.LabelFor(x => x.ShippingQuotes)
                <div class="controls">
                    @Html.DropDownListFor(x => x.ShipMethodKey, Model.ShippingQuotes, new { id = "shipping-quotes-select", @class = "form-control" })
                    @*
            <select id="shipping-quotes-select" class="form-control">
                @foreach (var quote in Model.ShippingQuotes)
                {
                    <option value="@quote.Value">@quote.Text</option>
                }
            </select>*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PaymentMethods)
                <div class="controls">
                    <select id="payment-method-select" class="form-control">
                        @foreach (var method in Model.PaymentMethods)
                        {
                            <option value="@method.Value">@method.Text</option>
                        }
                    </select>
                </div>
            </div>
        </form>
        @*
    Bazaar 1.8.3
    Added payment form resolution to make it easier to integrate forms for various payment provider.
    Controllers must inherit from BazaarPaymentMethodFormControllerBase.
    *@
        @if (Model.ResolvePaymentForms)
        {
            foreach (var frm in Model.PaymentMethodUiInfo)
            {
                var rvd = new RouteValueDictionary { { "model", Model } };
                if (frm.UrlActionParams.RouteParams.Any())
                {
                    foreach (var val in frm.UrlActionParams.RouteParams)
                    {
                        rvd.Add(val.Item1, val.Item2);
                    }
                }
                <div id="@frm.Alias" class="payment-method-form">
                    @Html.Action(frm.UrlActionParams.Method, frm.UrlActionParams.Controller, rvd)
                </div>
            }
        }
        else
        {
            <div id="CashPaymentMethod" class="payment-method-form">
                @Html.Action("RenderForm", "CashPaymentMethod", new { area = "Bazaar", model = Model })
            </div>
        }

    </div>

</div>
